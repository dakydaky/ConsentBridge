name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '**/*.md'
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props', 'global.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: |
          dotnet test \
            --no-build \
            --configuration Release \
            --logger "trx;LogFileName=test-results.trx" \
            --results-directory ./TestResults

      - name: Upload test results (artifacts)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.job }}
          path: TestResults/**/*.trx
          if-no-files-found: warn

      - name: Publish unit test results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            TestResults/**/*.trx
          check_name: Test Results
          comment_mode: failures
          report_individual_runs: true
          deduplicate_classes_by_file_name: true

  # Placeholder for future packaging (Docker image build/push)
  # docker:
  #   runs-on: ubuntu-latest
  #   needs: build-test
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     - name: Login to GHCR
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Build image
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         push: false
